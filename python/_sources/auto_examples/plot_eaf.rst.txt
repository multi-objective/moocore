
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_eaf.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_eaf.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_eaf.py:

Empirical Attainment Function
=================================

This example illustrates functionality related to the EAF.

The AUC of the EAF and the AOC (Hypervolume)
--------------------------------------------

The Area-Over-the-Curve (i.e., the hypervolume) of a set of nondominated sets is exactly the the Area-Under-the-Curve (AUC) of their corresponding EAF :cite:p:`LopVerDreDoe2025`, as this example shows.

.. GENERATED FROM PYTHON SOURCE LINES 12-51



.. image-sg:: /auto_examples/images/sphx_glr_plot_eaf_001.png
   :alt: plot eaf
   :srcset: /auto_examples/images/sphx_glr_plot_eaf_001.png, /auto_examples/images/sphx_glr_plot_eaf_001_2_00x.png 2.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Runs = 90
    AUC of EAF = 0.7452170740621844
      Mean AOC = 0.7452170740621902


    <Axes: xlabel='Number of sets', ylabel='Value'>





|

.. code-block:: Python


    import numpy as np
    import pandas as pd
    import moocore

    A = moocore.get_dataset("ALG_1_dat.xz")
    sets = A[:, -1]
    A = A[:, :-1]
    A = moocore.normalise(A, to_range=[0, 1])

    aoc = moocore.apply_within_sets(A, sets, moocore.hypervolume, ref=1)
    aoc = aoc.mean()
    eaf_a = moocore.eaf(A, sets=sets)
    eaf_a[:, 2] /= 100

    auc = moocore.hypervolume(eaf_a, ref=[1, 1, 0], maximise=[False, False, True])
    nruns = len(np.unique(sets))
    print(f"Runs = {nruns}\nAUC of EAF = {auc}\n  Mean AOC = {aoc}\n")

    runs = range(5, nruns + 1)
    aocs = []
    aucs = []
    for r in runs:
        selection = sets <= r
        subsets = sets[selection]
        a = A[selection, :]
        aoc = moocore.apply_within_sets(
            a, subsets, moocore.hypervolume, ref=1
        ).mean()
        eaf_a = moocore.eaf(a, subsets)
        eaf_a[:, 2] /= 100
        auc = moocore.hypervolume(
            eaf_a, ref=[1, 1, 0], maximise=[False, False, True]
        )
        aocs += [aoc]
        aucs += [auc]

    df = pd.DataFrame(dict(r=runs, AOC=aocs, AUC=aucs)).set_index("r")
    df.plot(style=["rs-", "c^--"], xlabel="Number of sets", ylabel="Value")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.952 seconds)


.. _sphx_glr_download_auto_examples_plot_eaf.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_eaf.ipynb <plot_eaf.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_eaf.py <plot_eaf.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_eaf.zip <plot_eaf.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
